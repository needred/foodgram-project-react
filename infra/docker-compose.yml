version: '3.8'

services:

  db:
    image: postgres:13.0-alpine
    volumes:
      - db_data:/var/lib/postgresql/data/
    env_file:
      - ./.env

  backend:
    image: needred/foodgram-backend:latest
    restart: always
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    depends_on:
      - db
    env_file:
      - ./.env

  frontend:
    image: needred/foodgram-frontend:latest
    # build:
      # context: ../frontend
      # dockerfile: Dockerfile
    volumes:
      - ../frontend/:/app/result_build/
    depends_on:
      - backend

  nginx:
    image: nginx:1.21.3-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static_value:/var/html/static
      - media_value:/var/html/media
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      # - ./certbot/conf:/etc/letsencrypt/
      # - ./certbot/www:/var/html/certbot/
    restart: always
    depends_on:
      - frontend
    # command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  # certbot:
    # image: certbot/certbot
    # volumes:
      # - ./certbot/conf:/etc/letsencrypt
      # - ./certbot/www:/var/html/certbot
    # entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  static_value:
  media_value:
  db_data:
